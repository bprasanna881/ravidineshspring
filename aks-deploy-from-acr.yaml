# update

# service type loadbalancer       
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: springboot-app
    k8s-app: springboot-app
  name: springboot-app
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8085
  type: LoadBalancer
  selector:
    app: springboot-app
---

#pvc provisioning
   kind: StorageClass
   apiVersion: storage.k8s.io/v1
   metadata:
   name: azure-disk
   provisioner: kubernetes.io/azure-disk
   parameters:
    storageaccounttype: Standard_LRS
    kind: Managed
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mssql-pvc
  annotations: 
    volume.beta.kubernetes.io/storage-class: azure-disk
spec:
  storageClassName: default
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-springboot-deployment
spec:
  replicas: 6
  selector:
    matchLabels:
      app: springboot-app
  template:
    metadata:
      labels:
        app: springboot-app
    spec:
      containers:
      - name: my-springboot-app
        image: acrk8s123.azurecr.io/bprasanna881/ravidineshspring:#{Build.BuildId}#
        imagePullPolicy: Always
        ports:
        - containerPort: 8085
        volumeMounts:
        - name: mssql-persistent-storage
          mountPath: /var/opt/mssql
      volumes:
      - name: mssql-persistent-storage
        persistentVolumeClaim:
          claimName: mssql-pvc